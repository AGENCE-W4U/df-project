sudo: required
dist: trusty
language: php

cache:
  bundler: true
  apt: true
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "$HOME/.npm"

php:
  - 5.6

env:
  matrix:
    - SCENARIO=none DF=HEAD
    - SCENARIO=none DF=STABLE
    - SCENARIO=dfs_dev DF=STABLE
    - SCENARIO=dfs_tec DF=STABLE

matrix:
  fast_finish: true
  allow_failures:
    - env: SCENARIO=none DF=HEAD

addons:
  apt:
    packages:
    # Dependencies for Chrome.
    - libappindicator1
    - fonts-liberation

before_install:
  # Disable xdebug.
  - phpenv config-rm xdebug.ini

  # Update composer.
  - composer self-update
  - composer --version

  # Add the oauth token to prevent GitHub timeouts.
  - git config --global github.accesstoken $GITHUB_OAUTH_TOKEN

  # Initialize xvfb (see https://docs.travis-ci.com/user/gui-and-headless-browsers)
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3

  # Download Chrome Driver
  - LATEST_CHROMEDRIVER=$(wget -q -O - http://chromedriver.storage.googleapis.com/LATEST_RELEASE)
  - wget http://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER/chromedriver_linux64.zip
  - unzip chromedriver_linux64.zip
  - chmod +x chromedriver
  - mkdir -p $HOME/.composer/vendor/bin
  - mv -f chromedriver $HOME/.composer/vendor/bin/
  - rm chromedriver_linux64.zip

  # Update Chrome.
  - export CHROME_BIN=/usr/bin/google-chrome
  - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  - sudo dpkg -i google-chrome-stable_current_amd64.deb
  - rm google-chrome-stable_current_amd64.deb
  - google-chrome --version

install:
  # Add Composer's local bin directory to the PATH so that we will be running
  # our installed versions of Drush, PHPCS, Behat, PhantomJS, etc.
  - export PATH="$HOME/.composer/vendor/bin:$TRAVIS_BUILD_DIR/bin:$PATH"

  # Composer install should fail on bad patches.
  - export COMPOSER_EXIT_ON_PATCH_FAILURE=1

  # Create the MySQL database and add a user for testing.
  - mysql -u root -e "CREATE DATABASE drupal; CREATE USER 'df'@'localhost' IDENTIFIED BY 'df'; GRANT ALL ON drupal.* TO 'df'@'localhost';"

  # PHP conf tweaks
  - echo 'max_execution_time = 120' >> drupal.php.ini;
  - echo 'sendmail_path = /bin/true' >> drupal.php.ini;
  - phpenv config-add drupal.php.ini
  - phpenv rehash

  # Test DF HEAD
  - if [[ "$DF" == HEAD ]]; then composer require "drupal/df:dev-8.x-1.x" --no-update; fi

  # Install drush
  - composer require drush/drush:^9.0 --no-update

  # Build the DF code base.
  - composer install

  # Install DF.
  - cd docroot
  - drush site-install df --yes --account-pass=admin --db-url=mysql://df:df@127.0.0.1/drupal
  - drush config-set system.logging error_level all --yes

  # If a scenario has been specified, enable it.
  - if [[ "$SCENARIO" != none ]]; then travis_wait drush es $SCENARIO; fi

before_script:
  - drush runserver --default-server=builtin 8080 &>/dev/null &
  - jdk_switcher use oraclejdk8
  # Start Selenium and dump its ginormous log into a temporary file.
  - mkdir ../tmp
  - selenium-server-standalone -port 4444 -log ../tmp/selenium2.log &
  - sleep 5
  - cd ..

  # Copy Behat configuration from DF.
  - cp ./docroot/profiles/df/behat.* .
  - "sed -i -e 's/selenium2: ~/selenium2: { browser: chrome }/g' behat.yml"
  - sed -i -e 's/%paths.base%\/tests\/features/docroot\/profiles\/df\/tests\/features/g' behat.yml
  - sed -i -e 's/tests\/features\/bootstrap/docroot\/profiles\/df\/tests\/features\/bootstrap/g' behat.yml
  - sed -i -e "s/ '..\/..\/'/ 'docroot'/g" behat.local.yml

script:
  - behat --strict --stop-on-failure --tags=none
  - if [[ "$SCENARIO" != none ]]; then behat --strict --stop-on-failure --tags=df; fi
  - if [[ "$SCENARIO" != none ]]; then behat --strict --stop-on-failure --tags=$SCENARIO; fi
